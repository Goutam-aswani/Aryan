from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
import tempfile

def generate_pdf_report(data):
    from datetime import datetime
    fd, path = tempfile.mkstemp(suffix='.pdf')
    c = canvas.Canvas(path, pagesize=letter)
    c.setTitle("Tax Visualizer Report")
    c.setFont("Helvetica-Bold", 18)
    c.drawString(60, 760, "Tax Visualizer Report")
    c.setFont("Helvetica", 10)
    c.drawString(60, 745, f"Generated on: {datetime.now().strftime('%d-%m-%Y %H:%M')}")

    income = data.get('income', 0)
    old = data.get('old_regime', {})
    new = data.get('new_regime', {})

    # Summary
    c.setFont("Helvetica-Bold", 12)
    c.drawString(60, 720, "Summary")
    c.setFont("Helvetica", 10)
    c.drawString(60, 705, f"Total Income: ₹{income}")
    c.drawString(60, 690, f"Old Regime Tax: ₹{old.get('tax', 0)} | New Regime Tax: ₹{new.get('tax', 0)}")
    c.drawString(60, 675, f"Old Regime Taxable Income: ₹{old.get('taxable_income', 0)} | New Regime Taxable Income: ₹{new.get('taxable_income', 0)}")

    # Bar chart for tax comparison
    c.setFont("Helvetica-Bold", 11)
    c.drawString(60, 650, "Tax Comparison (Bar Chart)")
    max_tax = max(old.get('tax', 0), new.get('tax', 0), 1)
    bar_height = 80
    scale = bar_height / max_tax if max_tax > 0 else 1
    # Old regime bar
    c.setFillColorRGB(0.3, 0.7, 0.3)
    old_bar = old.get('tax', 0) * scale
    c.rect(80, 600, 40, old_bar if old_bar > 0 else 2, fill=1)
    c.setFillColorRGB(0, 0, 0)
    c.drawString(80, 590, "Old Regime")
    c.drawString(80, 600 + (old_bar if old_bar > 0 else 2) + 5, f"₹{old.get('tax', 0)}")
    # New regime bar
    c.setFillColorRGB(0.2, 0.4, 0.8)
    new_bar = new.get('tax', 0) * scale
    c.rect(160, 600, 40, new_bar if new_bar > 0 else 2, fill=1)
    c.setFillColorRGB(0, 0, 0)
    c.drawString(160, 590, "New Regime")
    c.drawString(160, 600 + (new_bar if new_bar > 0 else 2) + 5, f"₹{new.get('tax', 0)}")
    # Note if tax is zero
    if old.get('tax', 0) == 0:
        c.setFont("Helvetica-Oblique", 9)
        c.setFillColorRGB(0.1, 0.5, 0.1)
        c.drawString(80, 600 + (old_bar if old_bar > 0 else 2) + 18, "No tax due to slab or rebate.")
    if new.get('tax', 0) == 0:
        c.setFont("Helvetica-Oblique", 9)
        c.setFillColorRGB(0.1, 0.3, 0.7)
        c.drawString(160, 600 + (new_bar if new_bar > 0 else 2) + 18, "No tax due to slab or rebate.")
    c.setFillColorRGB(0, 0, 0)

    # Detailed breakdowns
    c.setFont("Helvetica-Bold", 12)
    c.drawString(60, 560, "Old Regime Breakdown")
    c.setFont("Helvetica", 10)
    y = 545
    for b in old.get('breakdown', []):
        c.drawString(70, y, f"{b['range']}: {b['rate']}% = ₹{b['tax']}")
        y -= 13
    c.setFont("Helvetica-Bold", 12)
    c.drawString(60, y-10, "New Regime Breakdown")
    c.setFont("Helvetica", 10)
    y -= 25
    for b in new.get('breakdown', []):
        c.drawString(70, y, f"{b['range']}: {b['rate']}% = ₹{b['tax']}")
        y -= 13

    # Footer
    c.setFont("Helvetica-Oblique", 9)
    c.drawString(60, 40, "This report was generated by Tax Visualizer with Gen AI.")
    c.save()
    return path
